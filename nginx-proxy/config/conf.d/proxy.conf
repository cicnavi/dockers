proxy_request_buffering off;

log_format full '$remote_addr - $remote_user [$time_local] "$request" '
                'status=$status body_bytes_sent=$body_bytes_sent '
                'referer="$http_referer" user_agent="$http_user_agent" '
                'request_headers="$http_host $http_cookie" '
                'request_body="$request_body"';

access_log /var/log/nginx/access.log full;

# Set SSL headers
# Apache is rejecting the content of $ssl_client_cert because the SSL_CLIENT_CERT
# header forwarded from nginx contains raw PEM data, which includes line breaks
# and special characters. Apache (and many other backends) interpret this as a
# malformed HTTP request â€” hence the "400 Bad Request".
#Strip any incoming version:
proxy_set_header X-Ssl-Client-Cert "";
#proxy_set_header X-Ssl-Client-Cert $ssl_client_cert;

# $ssl_client_escaped_cert returns the urlencoded client certificate in the PEM
# format. Check nginx docs:
# https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_escaped_cert
proxy_set_header X-Ssl-Client-Escaped-Cert "";
proxy_set_header X-Ssl-Client-Escaped-Cert $ssl_client_escaped_cert;
